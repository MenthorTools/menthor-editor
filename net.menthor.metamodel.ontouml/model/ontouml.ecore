<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="ontouml" nsURI="http://menthor.net/" nsPrefix="ontouml-menthor">
  <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
    <details key="testsDirectory" value="/net.menthor.metamodel.ontouml.tests/src-gen"/>
    <details key="editDirectory" value="/net.menthor.metamodel.ontouml.edit/src-gen"/>
    <details key="editorDirectory" value="/net.menthor.metamodel.ontouml.editor/src-gen"/>
    <details key="fileExtensions" value="mouml"/>
    <details key="basePackage" value="net.menthor.metamodel"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="Element" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =======================================================================================================&#xA; Version 1.0 - OntoUML Meta-model&#xA;&#xA;&#x9;@author John Guerson (JG)&#xA;&#x9;@author Tiago Prince Sales (TS)&#xA; @co-author JoÃ£o Paulo Andrade Almeida (JP)&#xA; ========================================================================================================"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NamedElement" abstract="true" eSuperTypes="#//Element">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Container" abstract="true" eSuperTypes="#//NamedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - container &amp; contained elements&#xA;&#xA; A container is a named element that contains a set of elements (i.e. model, packages).&#xA;&#xA; A contained element is an element that has a holder (a container) and possibly a set of comments.&#xA; A contained element can be: a package, a generalization set, a relationship, or a type (classes, quality structures and regions).&#xA; Further, relationships and types are called Classifiers.*&#xA; ========================================"/>
    </eAnnotations>
    <eOperations name="packages" unique="false" upperBound="-1" eType="#//Package">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" Returns the packages only at this container."/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Package%>[] result = null;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.ContainedElement%>> _elements = this.getElements();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;if ((e instanceof &lt;%net.menthor.metamodel.ontouml.Package%>))&#xA;&#x9;{&#xA;&#x9;&#x9;final &lt;%net.menthor.metamodel.ontouml.Package%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.Package%>[])result;&#xA;&#x9;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Package%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)).add(((&lt;%net.menthor.metamodel.ontouml.Package%>)e));&#xA;&#x9;}&#xA;}&#xA;final &lt;%net.menthor.metamodel.ontouml.Package%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.Package%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Package%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Package%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allPackages" unique="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns all packages at this container recursively."/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.ContainedElement%>> _elements = this.getElements();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;if ((e instanceof &lt;%net.menthor.metamodel.ontouml.Package%>))&#xA;&#x9;{&#xA;&#x9;&#x9;result.add(((&lt;%net.menthor.metamodel.ontouml.Package%>)e));&#xA;&#x9;&#x9;this.allPackages(((&lt;%net.menthor.metamodel.ontouml.Container%>)e), result);&#xA;&#x9;}&#xA;}"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Container"/>
      <eParameters name="result" unique="false" upperBound="-1" eType="#//Package"/>
    </eOperations>
    <eOperations name="allPackages" unique="false" upperBound="-1" eType="#//Package">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Package%>[] result = null;&#xA;final &lt;%net.menthor.metamodel.ontouml.Package%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.Package%>[])result;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Package%>> _eList = &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Package%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Package%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)));&#xA;this.allPackages(this, _eList);&#xA;final &lt;%net.menthor.metamodel.ontouml.Package%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.Package%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Package%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Package%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="relationships" unique="false" upperBound="-1" eType="#//Relationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" Returns the relationships only at this container"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Relationship%>[] result = null;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.ContainedElement%>> _elements = this.getElements();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;if ((e instanceof &lt;%net.menthor.metamodel.ontouml.Relationship%>))&#xA;&#x9;{&#xA;&#x9;&#x9;final &lt;%net.menthor.metamodel.ontouml.Relationship%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.Relationship%>[])result;&#xA;&#x9;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Relationship%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)).add(((&lt;%net.menthor.metamodel.ontouml.Relationship%>)e));&#xA;&#x9;}&#xA;}&#xA;final &lt;%net.menthor.metamodel.ontouml.Relationship%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.Relationship%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Relationship%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Relationship%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allRelationships" unique="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns all relationships at this container recursively"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.ContainedElement%>> _elements = this.getElements();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.metamodel.ontouml.Relationship%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;result.add(((&lt;%net.menthor.metamodel.ontouml.Relationship%>)e));&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.metamodel.ontouml.Package%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.allRelationships(((&lt;%net.menthor.metamodel.ontouml.Container%>)e), result);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Container"/>
      <eParameters name="result" unique="false" upperBound="-1" eType="#//Relationship"/>
    </eOperations>
    <eOperations name="allRelationships" unique="false" upperBound="-1" eType="#//Relationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Relationship%>[] result = null;&#xA;final &lt;%net.menthor.metamodel.ontouml.Relationship%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.Relationship%>[])result;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Relationship%>> _eList = &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Relationship%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Relationship%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)));&#xA;this.allRelationships(this, _eList);&#xA;final &lt;%net.menthor.metamodel.ontouml.Relationship%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.Relationship%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Relationship%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Relationship%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="generalizationSets" unique="false" upperBound="-1" eType="#//GeneralizationSet">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" Returns the generalization sets only at this container"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>[] result = null;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.ContainedElement%>> _elements = this.getElements();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;if ((e instanceof &lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>))&#xA;&#x9;{&#xA;&#x9;&#x9;final &lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>[])result;&#xA;&#x9;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)).add(((&lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>)e));&#xA;&#x9;}&#xA;}&#xA;final &lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allGeneralizationSets" unique="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns all generalization sets at this container recursively"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.ContainedElement%>> _elements = this.getElements();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;result.add(((&lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>)e));&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.metamodel.ontouml.Package%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.allGeneralizationSets(((&lt;%net.menthor.metamodel.ontouml.Container%>)e), result);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Container"/>
      <eParameters name="result" unique="false" upperBound="-1" eType="#//GeneralizationSet"/>
    </eOperations>
    <eOperations name="allGeneralizationSets" unique="false" upperBound="-1" eType="#//GeneralizationSet">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>[] result = null;&#xA;final &lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>[])result;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>> _eList = &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)));&#xA;this.allGeneralizationSets(this, _eList);&#xA;final &lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="classes" unique="false" upperBound="-1" eType="#//Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" Returns the classes only at this container"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Class%>[] result = null;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.ContainedElement%>> _elements = this.getElements();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;if ((e instanceof &lt;%net.menthor.metamodel.ontouml.Class%>))&#xA;&#x9;{&#xA;&#x9;&#x9;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.Class%>[])result;&#xA;&#x9;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)).add(((&lt;%net.menthor.metamodel.ontouml.Class%>)e));&#xA;&#x9;}&#xA;}&#xA;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.Class%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allClasses" unique="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns all classes at this container recursively"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.ContainedElement%>> _elements = this.getElements();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.metamodel.ontouml.Class%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;result.add(((&lt;%net.menthor.metamodel.ontouml.Class%>)e));&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.metamodel.ontouml.Package%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.allClasses(((&lt;%net.menthor.metamodel.ontouml.Container%>)e), result);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Container"/>
      <eParameters name="result" unique="false" upperBound="-1" eType="#//Class"/>
    </eOperations>
    <eOperations name="allClasses" unique="false" upperBound="-1" eType="#//Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Class%>[] result = null;&#xA;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.Class%>[])result;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>> _eList = &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)));&#xA;this.allClasses(this, _eList);&#xA;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.Class%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="structures" unique="false" upperBound="-1" eType="#//Structure">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" Returns the quality structures only at this container"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Structure%>[] result = null;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.ContainedElement%>> _elements = this.getElements();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;if ((e instanceof &lt;%net.menthor.metamodel.ontouml.Structure%>))&#xA;&#x9;{&#xA;&#x9;&#x9;final &lt;%net.menthor.metamodel.ontouml.Structure%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.Structure%>[])result;&#xA;&#x9;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Structure%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)).add(((&lt;%net.menthor.metamodel.ontouml.Structure%>)e));&#xA;&#x9;}&#xA;}&#xA;final &lt;%net.menthor.metamodel.ontouml.Structure%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.Structure%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Structure%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Structure%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allStructures" unique="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns all quality structures at this container recursively."/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.ContainedElement%>> _elements = this.getElements();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.ContainedElement%> e : _elements)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.metamodel.ontouml.Structure%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;result.add(((&lt;%net.menthor.metamodel.ontouml.Structure%>)e));&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if ((e instanceof &lt;%net.menthor.metamodel.ontouml.Package%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.allStructures(((&lt;%net.menthor.metamodel.ontouml.Container%>)e), result);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Container"/>
      <eParameters name="result" unique="false" upperBound="-1" eType="#//Structure"/>
    </eOperations>
    <eOperations name="allStructures" unique="false" upperBound="-1" eType="#//Structure">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Structure%>[] result = null;&#xA;final &lt;%net.menthor.metamodel.ontouml.Structure%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.Structure%>[])result;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Structure%>> _eList = &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Structure%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Structure%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)));&#xA;this.allStructures(this, _eList);&#xA;final &lt;%net.menthor.metamodel.ontouml.Structure%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.Structure%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Structure%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Structure%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)));"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="elements" ordered="false"
        upperBound="-1" eType="#//ContainedElement" containment="true" resolveProxies="false"
        eOpposite="#//ContainedElement/holder"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Model" eSuperTypes="#//Container">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - model&#xA; ========================================"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ContainedElement" abstract="true" eSuperTypes="#//Element">
    <eOperations name="getModel" unique="false" eType="#//Model">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the root container from this given container"/>
        <details key="body" value="if ((c instanceof &lt;%net.menthor.metamodel.ontouml.Model%>))&#xA;{&#xA;&#x9;return ((&lt;%net.menthor.metamodel.ontouml.Model%>)c);&#xA;}&#xA;else&#xA;{&#xA;&#x9;if ((c instanceof &lt;%net.menthor.metamodel.ontouml.ContainedElement%>))&#xA;&#x9;{&#xA;&#x9;&#x9;&lt;%net.menthor.metamodel.ontouml.Container%> _holder = ((&lt;%net.menthor.metamodel.ontouml.ContainedElement%>)c).getHolder();&#xA;&#x9;&#x9;return this.getModel(_holder);&#xA;&#x9;}&#xA;}&#xA;return null;"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Container"/>
    </eOperations>
    <eOperations name="getModel" unique="false" eType="#//Model">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the root container"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Container%> _holder = this.getHolder();&#xA;return this.getModel(_holder);"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="holder" lowerBound="1"
        eType="#//Container" eOpposite="#//Container/elements"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="comments" upperBound="-1"
        eType="#//Comment" containment="true" resolveProxies="false" eOpposite="#//Comment/owner"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Package" eSuperTypes="#//Container #//ContainedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; package&#xA; ========================================"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Comment" eSuperTypes="#//Element">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - comment&#xA;&#xA; A comment has a string content and an owner.&#xA; ========================================"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="content" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owner" lowerBound="1" eType="#//ContainedElement"
        eOpposite="#//ContainedElement/comments"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Classifier" abstract="true" eSuperTypes="#//ContainedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - classifier (i.e. types and relationships)&#xA;&#xA; A classifier is a contained element defined to be a relationship or a type (classes, quality structures and regions).&#xA; ========================================"/>
    </eAnnotations>
    <eOperations name="children" unique="false" upperBound="-1" eType="#//Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" Direct children"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Class%>[] list = null;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>> _isSpecializedVia = this.getIsSpecializedVia();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.GeneralizationSet%> gs : _isSpecializedVia)&#xA;{&#xA;&#x9;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_list = (&lt;%net.menthor.metamodel.ontouml.Class%>[])list;&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _specializingClassifier = gs.getSpecializingClassifier();&#xA;&#x9;&lt;%com.google.common.collect.Iterables%>.&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>>addAll(((&lt;%java.util.Collection%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_list)), _specializingClassifier);&#xA;}&#xA;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_list_1 = (&lt;%net.menthor.metamodel.ontouml.Class%>[])list;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Classifier%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_list_1)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="parents" unique="false" upperBound="-1" eType="#//Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Direct parents"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Classifier%>[] list = null;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>> _specializesVia = this.getSpecializesVia();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.GeneralizationSet%> gs : _specializesVia)&#xA;{&#xA;&#x9;final &lt;%net.menthor.metamodel.ontouml.Classifier%>[] _converted_list = (&lt;%net.menthor.metamodel.ontouml.Classifier%>[])list;&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Classifier%> _specializedClassifier = gs.getSpecializedClassifier();&#xA;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_list)).add(_specializedClassifier);&#xA;}&#xA;final &lt;%net.menthor.metamodel.ontouml.Classifier%>[] _converted_list_1 = (&lt;%net.menthor.metamodel.ontouml.Classifier%>[])list;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Classifier%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_list_1)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allParents" unique="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* All (direct and indirect) parents"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>> _specializesVia = this.getSpecializesVia();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.GeneralizationSet%> gs : _specializesVia)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;&lt;%net.menthor.metamodel.ontouml.Classifier%> _specializedClassifier = gs.getSpecializedClassifier();&#xA;&#x9;&#x9;result.add(_specializedClassifier);&#xA;&#x9;&#x9;&lt;%net.menthor.metamodel.ontouml.Classifier%> _specializedClassifier_1 = gs.getSpecializedClassifier();&#xA;&#x9;&#x9;this.allParents(_specializedClassifier_1, result);&#xA;&#x9;}&#xA;}"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Classifier"/>
      <eParameters name="result" unique="false" upperBound="-1" eType="#//Classifier"/>
    </eOperations>
    <eOperations name="allParents" unique="false" upperBound="-1" eType="#//Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* All (direct and indirect) parents"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Classifier%>[] list = null;&#xA;final &lt;%net.menthor.metamodel.ontouml.Classifier%>[] _converted_list = (&lt;%net.menthor.metamodel.ontouml.Classifier%>[])list;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _eList = &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Classifier%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_list)));&#xA;this.allParents(this, _eList);&#xA;final &lt;%net.menthor.metamodel.ontouml.Classifier%>[] _converted_list_1 = (&lt;%net.menthor.metamodel.ontouml.Classifier%>[])list;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Classifier%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_list_1)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allChildren" unique="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" All (direct and indirect) children"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.GeneralizationSet%>> _isSpecializedVia = this.getIsSpecializedVia();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.GeneralizationSet%> gs : _isSpecializedVia)&#xA;{&#xA;&#x9;{&#xA;&#x9;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _specializingClassifier = gs.getSpecializingClassifier();&#xA;&#x9;&#x9;result.addAll(_specializingClassifier);&#xA;&#x9;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _specializingClassifier_1 = gs.getSpecializingClassifier();&#xA;&#x9;&#x9;for (final &lt;%net.menthor.metamodel.ontouml.Classifier%> children : _specializingClassifier_1)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.allChildren(children, result);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Classifier"/>
      <eParameters name="result" unique="false" upperBound="-1" eType="#//Classifier"/>
    </eOperations>
    <eOperations name="allChildren" unique="false" upperBound="-1" eType="#//Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" All (direct and indirect) children"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Classifier%>[] list = null;&#xA;final &lt;%net.menthor.metamodel.ontouml.Classifier%>[] _converted_list = (&lt;%net.menthor.metamodel.ontouml.Classifier%>[])list;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _eList = &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Classifier%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_list)));&#xA;this.allChildren(this, _eList);&#xA;final &lt;%net.menthor.metamodel.ontouml.Classifier%>[] _converted_list_1 = (&lt;%net.menthor.metamodel.ontouml.Classifier%>[])list;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Classifier%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_list_1)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="siblings" unique="false" upperBound="-1" eType="#//Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns direct siblings i.e. classifiers which specialize the same super-classifier as this classifier"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Classifier%>[] result = null;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _parents = this.parents();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.Classifier%> p : _parents)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _children = p.children();&#xA;&#x9;for (final &lt;%net.menthor.metamodel.ontouml.Classifier%> sibling : _children)&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _equals = sibling.equals(this);&#xA;&#x9;&#x9;boolean _not = (!_equals);&#xA;&#x9;&#x9;if (_not)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;final &lt;%net.menthor.metamodel.ontouml.Classifier%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.Classifier%>[])result;&#xA;&#x9;&#x9;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)).add(sibling);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;final &lt;%net.menthor.metamodel.ontouml.Classifier%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.Classifier%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Classifier%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="ends" unique="false" upperBound="-1" eType="#//EndPoint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns all direct end-points of from this classifier (in which we can navigate from it)&#xA; In other words, it returns all opposite ends of the relationships connected to this classifier."/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.EndPoint%>[] result = null;&#xA;&lt;%net.menthor.metamodel.ontouml.Model%> _model = this.getModel();&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Relationship%>> _allRelationships = _model.allRelationships();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.Relationship%> rel : _allRelationships)&#xA;{&#xA;&#x9;boolean _isEnd = rel.isEnd(this);&#xA;&#x9;if (_isEnd)&#xA;&#x9;{&#xA;&#x9;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>> _endPoints = rel.getEndPoints();&#xA;&#x9;&#x9;for (final &lt;%net.menthor.metamodel.ontouml.EndPoint%> ep : _endPoints)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&lt;%net.menthor.metamodel.ontouml.Classifier%> _endType = ep.getEndType();&#xA;&#x9;&#x9;&#x9;boolean _equals = _endType.equals(this);&#xA;&#x9;&#x9;&#x9;boolean _not = (!_equals);&#xA;&#x9;&#x9;&#x9;if (_not)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;final &lt;%net.menthor.metamodel.ontouml.EndPoint%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.EndPoint%>[])result;&#xA;&#x9;&#x9;&#x9;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)).add(ep);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;final &lt;%net.menthor.metamodel.ontouml.EndPoint%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.EndPoint%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.EndPoint%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allEnds" unique="false" upperBound="-1" eType="#//EndPoint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns all direct and indirect end-points from this classifier (in which we can navigate from it)&#xA; In other words, it returns all opposite ends of the relationships connected to this classifier, or to a parent of this classifier."/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.EndPoint%>[] result = null;&#xA;final &lt;%net.menthor.metamodel.ontouml.EndPoint%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.EndPoint%>[])result;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>> _ends = this.ends();&#xA;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)).addAll(_ends);&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _allParents = this.allParents();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.Classifier%> p : _allParents)&#xA;{&#xA;&#x9;if ((p instanceof &lt;%net.menthor.metamodel.ontouml.Class%>))&#xA;&#x9;{&#xA;&#x9;&#x9;final &lt;%net.menthor.metamodel.ontouml.EndPoint%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.EndPoint%>[])result;&#xA;&#x9;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>> _ends_1 = ((&lt;%net.menthor.metamodel.ontouml.Class%>)p).ends();&#xA;&#x9;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)).addAll(_ends_1);&#xA;&#x9;}&#xA;}&#xA;final &lt;%net.menthor.metamodel.ontouml.EndPoint%>[] _converted_result_2 = (&lt;%net.menthor.metamodel.ontouml.EndPoint%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.EndPoint%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_2)));"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="isSpecializedVia" ordered="false"
        upperBound="-1" eType="#//GeneralizationSet" eOpposite="#//GeneralizationSet/specializedClassifier"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="specializesVia" ordered="false"
        upperBound="-1" eType="#//GeneralizationSet" eOpposite="#//GeneralizationSet/specializingClassifier"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="GeneralizationSet" eSuperTypes="#//NamedElement #//ContainedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - generalization set (between classifiers)&#xA;&#xA; A former UML generalization is now a generalization set with only one specializing classifier.&#xA; A generalization set can be complete. Generalization sets are by default disjoint.&#xA; Generalization sets cannot define cycles (Constraint C8, C9, C10, C11)&#xA; Further, a generalization set may refer to a high order class (Constraint C7).&#xA; ========================================"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isCovering" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="specializedClassifier"
        lowerBound="1" eType="#//Classifier" eOpposite="#//Classifier/isSpecializedVia">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" JP: Default should be true, but isDijoint has been removed. Use different GeneralizationSets if necessary to represent disjointness."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="specializingClassifier"
        ordered="false" lowerBound="1" upperBound="-1" eType="#//Classifier" eOpposite="#//Classifier/specializesVia"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="highOrder" eType="#//Class"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Universal">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - class stereotypes&#xA;&#xA; UFO's universals are defined here as simple enumerations instead of types hierarchies.&#xA; Applications need to allow us change an element type (e.g. let's say, a kind into a role)&#xA; We should not need to delete the class, create a new one, and then change all former references in the model&#xA; that previously pointed to that class, to point to the new class created.&#xA; ========================================"/>
    </eAnnotations>
    <eLiterals name="Kind"/>
    <eLiterals name="Collective"/>
    <eLiterals name="Quantity"/>
    <eLiterals name="Relator"/>
    <eLiterals name="Mode"/>
    <eLiterals name="Quality"/>
    <eLiterals name="Role"/>
    <eLiterals name="Phase"/>
    <eLiterals name="SubKind"/>
    <eLiterals name="Category"/>
    <eLiterals name="Mixin"/>
    <eLiterals name="RoleMixin"/>
    <eLiterals name="PhaseMixin"/>
    <eLiterals name="DataType"/>
    <eLiterals name="Enumeration"/>
    <eLiterals name="Event"/>
    <eLiterals name="Hou"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Quality">
    <eLiterals name="Nominal"/>
    <eLiterals name="Perceivable"/>
    <eLiterals name="NonPerceivable"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Type" abstract="true" eSuperTypes="#//NamedElement #//Classifier">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - type (i.e. classes, quality structures and regions)&#xA;&#xA; ========================================="/>
    </eAnnotations>
    <eOperations name="relatedTypes" unique="false" upperBound="-1" eType="#//Type">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns all types directly connected to this through a relationship."/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Type%>[] result = null;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>> _ends = this.ends();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.EndPoint%> ep : _ends)&#xA;{&#xA;&#x9;final &lt;%net.menthor.metamodel.ontouml.Type%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.Type%>[])result;&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Classifier%> _endType = ep.getEndType();&#xA;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Type%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)).add(((&lt;%net.menthor.metamodel.ontouml.Type%>) _endType));&#xA;}&#xA;final &lt;%net.menthor.metamodel.ontouml.Type%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.Type%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Type%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Type%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allRelatedTypes" unique="false" upperBound="-1" eType="#//Type">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="*Returns all types directly and indirectly connected to this through a relationship."/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Type%>[] result = null;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>> _allEnds = this.allEnds();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.EndPoint%> ep : _allEnds)&#xA;{&#xA;&#x9;final &lt;%net.menthor.metamodel.ontouml.Type%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.Type%>[])result;&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Classifier%> _endType = ep.getEndType();&#xA;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Type%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)).add(((&lt;%net.menthor.metamodel.ontouml.Type%>) _endType));&#xA;}&#xA;final &lt;%net.menthor.metamodel.ontouml.Type%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.Type%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Type%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Type%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)));"/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Class" eSuperTypes="#//Type">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - class (type)&#xA;&#xA; A class is named classifier that may have a stereotype.&#xA; In the case where the stereotype is an enumeration, the class must have 2 or more enumeration literals (constraint C1).&#xA; In the case where the stereotype is a quality, the class must define a quality type (constraint C4).&#xA; A class may also be abstract or derived, and contain a set of attributes.&#xA; Data-Types and Enumeration cannot be derived (Constraint C6).&#xA; Enumerations may be a ground for a quality reference structure (Constraint C17).&#xA; In the case where the stereotype is not a hou, data-type or enumeration, the class may be an instance of one or more high order classes (constraint C2, C3).&#xA; In the case where the class is a truth maker (relator's descendant or relator), that class may be a truth maker for one or more material relationships (constraint C5).&#xA; A class may be in a set of generalization sets as super-class or sub-class.&#xA; ========================================"/>
    </eAnnotations>
    <eOperations name="isKind" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Universal%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Universal%>.KIND);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isSubKind" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Universal%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Universal%>.SUB_KIND);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isCollective" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Universal%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Universal%>.COLLECTIVE);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isQuantity" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Universal%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Universal%>.QUANTITY);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isRelator" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Universal%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Universal%>.RELATOR);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMode" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Universal%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Universal%>.MODE);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isQuality" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Universal%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Universal%>.QUALITY);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isRole" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Universal%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Universal%>.ROLE);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isRoleMixin" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Universal%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Universal%>.ROLE_MIXIN);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isPhaseMixin" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Universal%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Universal%>.PHASE_MIXIN);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isPhase" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Universal%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Universal%>.PHASE);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isCategory" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Universal%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Universal%>.CATEGORY);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMixin" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Universal%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Universal%>.MIXIN);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isEvent" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Universal%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Universal%>.EVENT);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isHighOrder" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Universal%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Universal%>.HOU);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isDataType" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Universal%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Universal%>.DATA_TYPE);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isEnumeration" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Universal%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Universal%>.ENUMERATION);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isRigid" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _or_2 = false;&#xA;boolean _or_3 = false;&#xA;boolean _or_4 = false;&#xA;boolean _or_5 = false;&#xA;boolean _or_6 = false;&#xA;boolean _isKind = this.isKind();&#xA;if (_isKind)&#xA;{&#xA;&#x9;_or_6 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isCollective = this.isCollective();&#xA;&#x9;_or_6 = _isCollective;&#xA;}&#xA;if (_or_6)&#xA;{&#xA;&#x9;_or_5 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isQuantity = this.isQuantity();&#xA;&#x9;_or_5 = _isQuantity;&#xA;}&#xA;if (_or_5)&#xA;{&#xA;&#x9;_or_4 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isRelator = this.isRelator();&#xA;&#x9;_or_4 = _isRelator;&#xA;}&#xA;if (_or_4)&#xA;{&#xA;&#x9;_or_3 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMode = this.isMode();&#xA;&#x9;_or_3 = _isMode;&#xA;}&#xA;if (_or_3)&#xA;{&#xA;&#x9;_or_2 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isQuality = this.isQuality();&#xA;&#x9;_or_2 = _isQuality;&#xA;}&#xA;if (_or_2)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubKind = this.isSubKind();&#xA;&#x9;_or_1 = _isSubKind;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isCategory = this.isCategory();&#xA;&#x9;_or = _isCategory;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isNonRigid" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _or_2 = false;&#xA;boolean _isRole = this.isRole();&#xA;if (_isRole)&#xA;{&#xA;&#x9;_or_2 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhase = this.isPhase();&#xA;&#x9;_or_2 = _isPhase;&#xA;}&#xA;if (_or_2)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isRoleMixin = this.isRoleMixin();&#xA;&#x9;_or_1 = _isRoleMixin;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMixin = this.isMixin();&#xA;&#x9;_or = _isMixin;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isAntiRigid" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _isRole = this.isRole();&#xA;if (_isRole)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhase = this.isPhase();&#xA;&#x9;_or_1 = _isPhase;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isRoleMixin = this.isRoleMixin();&#xA;&#x9;_or = _isRoleMixin;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isSemiRigid" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _isRoleMixin = this.isRoleMixin();&#xA;if (_isRoleMixin)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhaseMixin = this.isPhaseMixin();&#xA;&#x9;_or_1 = _isPhaseMixin;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMixin = this.isMixin();&#xA;&#x9;_or = _isMixin;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMoment" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _isTruthMaker = this.isTruthMaker();&#xA;if (_isTruthMaker)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMode = this.isMode();&#xA;&#x9;_or_1 = _isMode;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isQuality = this.isQuality();&#xA;&#x9;_or = _isQuality;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isIdentityProvider" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Checks if this class is a direct identity provider&#xA; i.e. it does not inherit his identity from other classes."/>
        <details key="body" value="boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _or_2 = false;&#xA;boolean _or_3 = false;&#xA;boolean _isKind = this.isKind();&#xA;if (_isKind)&#xA;{&#xA;&#x9;_or_3 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isQuantity = this.isQuantity();&#xA;&#x9;_or_3 = _isQuantity;&#xA;}&#xA;if (_or_3)&#xA;{&#xA;&#x9;_or_2 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isCollective = this.isCollective();&#xA;&#x9;_or_2 = _isCollective;&#xA;}&#xA;if (_or_2)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isRelator = this.isRelator();&#xA;&#x9;_or_1 = _isRelator;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMode = this.isMode();&#xA;&#x9;_or = _isMode;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isTruthMaker" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Checks if this class is a relator (or descendant of a relator)&#xA; and is related to one or more material relationships"/>
        <details key="body" value="boolean _isRelator = this.isRelator();&#xA;if (_isRelator)&#xA;{&#xA;&#x9;return true;&#xA;}&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _allParents = this.allParents();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.Classifier%> c : _allParents)&#xA;{&#xA;&#x9;if ((c instanceof &lt;%net.menthor.metamodel.ontouml.Class%>))&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _isRelator_1 = ((&lt;%net.menthor.metamodel.ontouml.Class%>)c).isRelator();&#xA;&#x9;&#x9;if (_isRelator_1)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;return false;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMixinClass" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Checks if this class is a Mixin, Category, RoleMixin or PhaseMixin"/>
        <details key="body" value="boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _or_2 = false;&#xA;boolean _isMixin = this.isMixin();&#xA;if (_isMixin)&#xA;{&#xA;&#x9;_or_2 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isRoleMixin = this.isRoleMixin();&#xA;&#x9;_or_2 = _isRoleMixin;&#xA;}&#xA;if (_or_2)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isPhaseMixin = this.isPhaseMixin();&#xA;&#x9;_or_1 = _isPhaseMixin;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isCategory = this.isCategory();&#xA;&#x9;_or = _isCategory;&#xA;}&#xA;if (_or)&#xA;{&#xA;&#x9;return true;&#xA;}&#xA;else&#xA;{&#xA;&#x9;return false;&#xA;}"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="identityProvidersAtAllParents" unique="false" upperBound="-1"
        eType="#//Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the identity providers amongst all parents of a class (more than one may be found)"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Class%>[] result = null;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _allParents = this.allParents();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.Classifier%> p : _allParents)&#xA;{&#xA;&#x9;if ((p instanceof &lt;%net.menthor.metamodel.ontouml.Class%>))&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _isIdentityProvider = ((&lt;%net.menthor.metamodel.ontouml.Class%>)p).isIdentityProvider();&#xA;&#x9;&#x9;if (_isIdentityProvider)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.Class%>[])result;&#xA;&#x9;&#x9;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)).add(((&lt;%net.menthor.metamodel.ontouml.Class%>)p));&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.Class%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="identityProvidersAtAllChildren" unique="false" upperBound="-1"
        eType="#//Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the identity providers amongst all children of a class (more than one may be found)"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Class%>[] result = null;&#xA;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _allChildren = this.allChildren();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.Classifier%> p : _allChildren)&#xA;{&#xA;&#x9;if ((p instanceof &lt;%net.menthor.metamodel.ontouml.Class%>))&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _isIdentityProvider = ((&lt;%net.menthor.metamodel.ontouml.Class%>)p).isIdentityProvider();&#xA;&#x9;&#x9;if (_isIdentityProvider)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.Class%>[])result;&#xA;&#x9;&#x9;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)).add(((&lt;%net.menthor.metamodel.ontouml.Class%>)p));&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;boolean _or = false;&#xA;&#x9;&#x9;boolean _isAntiRigid = ((&lt;%net.menthor.metamodel.ontouml.Class%>)p).isAntiRigid();&#xA;&#x9;&#x9;if (_isAntiRigid)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;_or = true;&#xA;&#x9;&#x9;} else&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;boolean _isSubKind = ((&lt;%net.menthor.metamodel.ontouml.Class%>)p).isSubKind();&#xA;&#x9;&#x9;&#x9;_or = _isSubKind;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (_or)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.Class%>[])result;&#xA;&#x9;&#x9;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>> _identityProvidersAtAllParents = ((&lt;%net.menthor.metamodel.ontouml.Class%>)p).identityProvidersAtAllParents();&#xA;&#x9;&#x9;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)).addAll(_identityProvidersAtAllParents);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_result_2 = (&lt;%net.menthor.metamodel.ontouml.Class%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_2)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="identityProviders" unique="false" upperBound="-1" eType="#//Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the identity providers of a class (more than one may be found)"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Class%>[] result = null;&#xA;boolean _isIdentityProvider = this.isIdentityProvider();&#xA;if (_isIdentityProvider)&#xA;{&#xA;&#x9;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_result = (&lt;%net.menthor.metamodel.ontouml.Class%>[])result;&#xA;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result)).add(this);&#xA;}&#xA;boolean _or = false;&#xA;boolean _isAntiRigid = this.isAntiRigid();&#xA;if (_isAntiRigid)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubKind = this.isSubKind();&#xA;&#x9;_or = _isSubKind;&#xA;}&#xA;if (_or)&#xA;{&#xA;&#x9;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_result_1 = (&lt;%net.menthor.metamodel.ontouml.Class%>[])result;&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>> _identityProvidersAtAllParents = this.identityProvidersAtAllParents();&#xA;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_1)).addAll(_identityProvidersAtAllParents);&#xA;}&#xA;boolean _isMixinClass = this.isMixinClass();&#xA;if (_isMixinClass)&#xA;{&#xA;&#x9;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_result_2 = (&lt;%net.menthor.metamodel.ontouml.Class%>[])result;&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>> _identityProvidersAtAllChildren = this.identityProvidersAtAllChildren();&#xA;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_2)).addAll(_identityProvidersAtAllChildren);&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _allParents = this.allParents();&#xA;&#x9;for (final &lt;%net.menthor.metamodel.ontouml.Classifier%> p : _allParents)&#xA;&#x9;{&#xA;&#x9;&#x9;if ((p instanceof &lt;%net.menthor.metamodel.ontouml.Class%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_result_3 = (&lt;%net.menthor.metamodel.ontouml.Class%>[])result;&#xA;&#x9;&#x9;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>> _identityProvidersAtAllChildren_1 = ((&lt;%net.menthor.metamodel.ontouml.Class%>)p).identityProvidersAtAllChildren();&#xA;&#x9;&#x9;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_3)).addAll(_identityProvidersAtAllChildren_1);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_result_4 = (&lt;%net.menthor.metamodel.ontouml.Class%>[])result;&#xA;return &lt;%org.eclipse.emf.common.util.ECollections%>.&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>toEList(((&lt;%java.lang.Iterable%>&lt;? extends &lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_result_4)));"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isAmountOfMatter" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="*&#xA;Checks if this class is an amount of matter i.e.&#xA;1) if it is a quantity element, or,&#xA;2) if it is a sub-kind or anti-rigid with exactly one identity provider of the type Quantity, or,&#xA;3) if it is a mixin class in which all their children are quantities."/>
        <details key="body" value="boolean _isQuantity = this.isQuantity();&#xA;if (_isQuantity)&#xA;{&#xA;&#x9;return true;&#xA;}&#xA;boolean _or = false;&#xA;boolean _isAntiRigid = this.isAntiRigid();&#xA;if (_isAntiRigid)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubKind = this.isSubKind();&#xA;&#x9;_or = _isSubKind;&#xA;}&#xA;if (_or)&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Class%>[] providers = null;&#xA;&#x9;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_providers = (&lt;%net.menthor.metamodel.ontouml.Class%>[])providers;&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>> _identityProviders = this.identityProviders();&#xA;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_providers)).addAll(_identityProviders);&#xA;&#x9;for (final &lt;%net.menthor.metamodel.ontouml.Class%> c : providers)&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _isQuantity_1 = c.isQuantity();&#xA;&#x9;&#x9;if (_isQuantity_1)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;boolean _isMixinClass = this.isMixinClass();&#xA;if (_isMixinClass)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _children = this.children();&#xA;&#x9;int _size = _children.size();&#xA;&#x9;boolean _equals = (_size == 0);&#xA;&#x9;if (_equals)&#xA;&#x9;{&#xA;&#x9;&#x9;return false;&#xA;&#x9;}&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _children_1 = this.children();&#xA;&#x9;for (final &lt;%net.menthor.metamodel.ontouml.Classifier%> child : _children_1)&#xA;&#x9;{&#xA;&#x9;&#x9;if ((child instanceof &lt;%net.menthor.metamodel.ontouml.Class%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;boolean _isQuantity_2 = ((&lt;%net.menthor.metamodel.ontouml.Class%>)child).isQuantity();&#xA;&#x9;&#x9;&#x9;boolean _not = (!_isQuantity_2);&#xA;&#x9;&#x9;&#x9;if (_not)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;return true;&#xA;}&#xA;return false;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isFunctionalComplex" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="*&#xA;Checks if this element is a functional complex i.e.&#xA;1) If it is a kind, or&#xA;2) if it is a sub-kind or anti-rigid with exactly one identity provider of the type kind, or,&#xA;3) if it is a mixin class in which all their children are functional complexes."/>
        <details key="body" value="boolean _isKind = this.isKind();&#xA;if (_isKind)&#xA;{&#xA;&#x9;return true;&#xA;}&#xA;boolean _or = false;&#xA;boolean _isAntiRigid = this.isAntiRigid();&#xA;if (_isAntiRigid)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubKind = this.isSubKind();&#xA;&#x9;_or = _isSubKind;&#xA;}&#xA;if (_or)&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Class%>[] providers = null;&#xA;&#x9;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_providers = (&lt;%net.menthor.metamodel.ontouml.Class%>[])providers;&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>> _identityProviders = this.identityProviders();&#xA;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_providers)).addAll(_identityProviders);&#xA;&#x9;for (final &lt;%net.menthor.metamodel.ontouml.Class%> c : providers)&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _isKind_1 = c.isKind();&#xA;&#x9;&#x9;if (_isKind_1)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;boolean _isMixinClass = this.isMixinClass();&#xA;if (_isMixinClass)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _children = this.children();&#xA;&#x9;int _size = _children.size();&#xA;&#x9;boolean _equals = (_size == 0);&#xA;&#x9;if (_equals)&#xA;&#x9;{&#xA;&#x9;&#x9;return false;&#xA;&#x9;}&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _children_1 = this.children();&#xA;&#x9;for (final &lt;%net.menthor.metamodel.ontouml.Classifier%> child : _children_1)&#xA;&#x9;{&#xA;&#x9;&#x9;if ((child instanceof &lt;%net.menthor.metamodel.ontouml.Class%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;boolean _isKind_2 = ((&lt;%net.menthor.metamodel.ontouml.Class%>)child).isKind();&#xA;&#x9;&#x9;&#x9;boolean _not = (!_isKind_2);&#xA;&#x9;&#x9;&#x9;if (_not)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;return true;&#xA;}&#xA;return false;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isCollection" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="*&#xA;Checks if a particular element is a collective i.e.&#xA;1) if it is a collective element, or,&#xA;2) if it is a sub-kind or anti-rigid with exactly one identity provider of the type Collective, or,&#xA;3) if it is a mixin class in which all their children are collectives."/>
        <details key="body" value="boolean _isCollective = this.isCollective();&#xA;if (_isCollective)&#xA;{&#xA;&#x9;return true;&#xA;}&#xA;boolean _or = false;&#xA;boolean _isAntiRigid = this.isAntiRigid();&#xA;if (_isAntiRigid)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubKind = this.isSubKind();&#xA;&#x9;_or = _isSubKind;&#xA;}&#xA;if (_or)&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Class%>[] providers = null;&#xA;&#x9;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_providers = (&lt;%net.menthor.metamodel.ontouml.Class%>[])providers;&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>> _identityProviders = this.identityProviders();&#xA;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_providers)).addAll(_identityProviders);&#xA;&#x9;for (final &lt;%net.menthor.metamodel.ontouml.Class%> c : providers)&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _isCollective_1 = c.isCollective();&#xA;&#x9;&#x9;if (_isCollective_1)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;boolean _isMixinClass = this.isMixinClass();&#xA;if (_isMixinClass)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _children = this.children();&#xA;&#x9;int _size = _children.size();&#xA;&#x9;boolean _equals = (_size == 0);&#xA;&#x9;if (_equals)&#xA;&#x9;{&#xA;&#x9;&#x9;return false;&#xA;&#x9;}&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _children_1 = this.children();&#xA;&#x9;for (final &lt;%net.menthor.metamodel.ontouml.Classifier%> child : _children_1)&#xA;&#x9;{&#xA;&#x9;&#x9;if ((child instanceof &lt;%net.menthor.metamodel.ontouml.Class%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;boolean _isCollective_2 = ((&lt;%net.menthor.metamodel.ontouml.Class%>)child).isCollective();&#xA;&#x9;&#x9;&#x9;boolean _not = (!_isCollective_2);&#xA;&#x9;&#x9;&#x9;if (_not)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;return true;&#xA;}&#xA;return false;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isIntrinsic" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="*&#xA;Checks if a particular element is a moment  i.e.&#xA;1) if it is a truth maker, mode or quality element, or,&#xA;2) if it is a sub-kind or anti-rigid with exactly one identity provider being a truth maker, mode or quality, or,&#xA;3) if it is a mixin class in which all their children are truth makers, qualities or modes."/>
        <details key="body" value="boolean _isMoment = this.isMoment();&#xA;if (_isMoment)&#xA;{&#xA;&#x9;return true;&#xA;}&#xA;boolean _or = false;&#xA;boolean _isAntiRigid = this.isAntiRigid();&#xA;if (_isAntiRigid)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubKind = this.isSubKind();&#xA;&#x9;_or = _isSubKind;&#xA;}&#xA;if (_or)&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Class%>[] providers = null;&#xA;&#x9;final &lt;%net.menthor.metamodel.ontouml.Class%>[] _converted_providers = (&lt;%net.menthor.metamodel.ontouml.Class%>[])providers;&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>> _identityProviders = this.identityProviders();&#xA;&#x9;((&lt;%java.util.List%>&lt;&lt;%net.menthor.metamodel.ontouml.Class%>>)org.eclipse.xtext.xbase.lib.Conversions.doWrapArray(_converted_providers)).addAll(_identityProviders);&#xA;&#x9;for (final &lt;%net.menthor.metamodel.ontouml.Class%> c : providers)&#xA;&#x9;{&#xA;&#x9;&#x9;boolean _isMoment_1 = c.isMoment();&#xA;&#x9;&#x9;if (_isMoment_1)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;boolean _isMixinClass = this.isMixinClass();&#xA;if (_isMixinClass)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _children = this.children();&#xA;&#x9;int _size = _children.size();&#xA;&#x9;boolean _equals = (_size == 0);&#xA;&#x9;if (_equals)&#xA;&#x9;{&#xA;&#x9;&#x9;return false;&#xA;&#x9;}&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Classifier%>> _children_1 = this.children();&#xA;&#x9;for (final &lt;%net.menthor.metamodel.ontouml.Classifier%> child : _children_1)&#xA;&#x9;{&#xA;&#x9;&#x9;if ((child instanceof &lt;%net.menthor.metamodel.ontouml.Class%>))&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;boolean _isMoment_2 = ((&lt;%net.menthor.metamodel.ontouml.Class%>)child).isMoment();&#xA;&#x9;&#x9;&#x9;boolean _not = (!_isMoment_2);&#xA;&#x9;&#x9;&#x9;if (_not)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;return false;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;return true;&#xA;}&#xA;return false;"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="stereotype" unique="false"
        eType="#//Universal"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributes" ordered="false"
        upperBound="-1" eType="#//Attribute" containment="true" resolveProxies="false"
        eOpposite="#//Attribute/owner"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="qualityType" unique="false"
        eType="#//Quality"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="literals" upperBound="-1"
        eType="#//Literal" containment="true" resolveProxies="false" eOpposite="#//Literal/owner"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="groundingStructure" eType="#//Structure"
        eOpposite="#//Structure/groundedEnumeration"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="instanceOf" ordered="false"
        upperBound="-1" eType="#//Class"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="istruthMakerOf" ordered="false"
        upperBound="-1" eType="#//Relationship" eOpposite="#//Relationship/derivedFromTruthMaker"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isExtensional" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Literal" eSuperTypes="#//Element">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - enumeration literal&#xA; ========================================"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owner" lowerBound="1" eType="#//Class"
        eOpposite="#//Class/literals"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="groundingRegion" eType="#//Region"
        eOpposite="#//Region/groundedLiteral"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Attribute" eSuperTypes="#//Property">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - attribute&#xA;&#xA; An attribute is a property that has an owner class and a primitive type.&#xA;&#xA; A primitive type is a contained element which does not have a name.&#xA; A primitive type have a primitive stereotype such as Integer, String, Real, Boolean, UnlimitedNatural and Date&#xA; ========================================"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owner" lowerBound="1" eType="#//Class"
        eOpposite="#//Class/attributes"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="primitive" unique="false"
        lowerBound="1" eType="#//Primitive"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Primitive">
    <eLiterals name="Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* JP: This is a direct way to implement built-in types, differently from UML in which&#xA; this should be a library of built-ins at model level"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="String"/>
    <eLiterals name="Real"/>
    <eLiterals name="Integer"/>
    <eLiterals name="Decimal"/>
    <eLiterals name="UnlimitedNatural"/>
    <eLiterals name="Date"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Structure" eSuperTypes="#//Type">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - structure (type)&#xA;&#xA; A Structure may have several Regions.&#xA; A Structure if grounded, must be grounded in a Enumeration (Constraint C18).&#xA; ========================================"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="regions" upperBound="-1"
        eType="#//Region" eOpposite="#//Region/ownerStructure"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="groundedEnumeration" eType="#//Class"
        eOpposite="#//Class/groundingStructure"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Region" eSuperTypes="#//Type">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - region (type)&#xA;&#xA; A Region can be owned by a Structure and be grounded in an Enumeration Literal&#xA; A &quot;Composed&quot; Region must have more than one Region.&#xA; A &quot;Basic&quot; Region is defined by a Integer or a Decimal measure type.&#xA; A &quot;Nominal&quot; Region is defined by a String measure type.&#xA; ========================================"/>
    </eAnnotations>
    <eOperations name="isBasic" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _and_1 = false;&#xA;&lt;%net.menthor.metamodel.ontouml.Primitive%> _basicType = this.getBasicType();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_basicType, null));&#xA;if (!_notEquals)&#xA;{&#xA;&#x9;_and_1 = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Region%>> _composedBy = this.getComposedBy();&#xA;&#x9;int _size = _composedBy.size();&#xA;&#x9;boolean _equals = (_size == 0);&#xA;&#x9;_and_1 = _equals;&#xA;}&#xA;if (!_and_1)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _or = false;&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Primitive%> _basicType_1 = this.getBasicType();&#xA;&#x9;boolean _equals_1 = &lt;%com.google.common.base.Objects%>.equal(_basicType_1, &lt;%net.menthor.metamodel.ontouml.Primitive%>.INTEGER);&#xA;&#x9;if (_equals_1)&#xA;&#x9;{&#xA;&#x9;&#x9;_or = true;&#xA;&#x9;} else&#xA;&#x9;{&#xA;&#x9;&#x9;&lt;%net.menthor.metamodel.ontouml.Primitive%> _basicType_2 = this.getBasicType();&#xA;&#x9;&#x9;boolean _equals_2 = &lt;%com.google.common.base.Objects%>.equal(_basicType_2, &lt;%net.menthor.metamodel.ontouml.Primitive%>.DECIMAL);&#xA;&#x9;&#x9;_or = _equals_2;&#xA;&#x9;}&#xA;&#x9;_and = _or;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isComposed" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.Primitive%> _basicType = this.getBasicType();&#xA;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_basicType, null);&#xA;if (!_equals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.Region%>> _composedBy = this.getComposedBy();&#xA;&#x9;int _size = _composedBy.size();&#xA;&#x9;boolean _greaterThan = (_size > 0);&#xA;&#x9;_and = _greaterThan;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isNominal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.Primitive%> _basicType = this.getBasicType();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_basicType, null));&#xA;if (!_notEquals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Primitive%> _basicType_1 = this.getBasicType();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_basicType_1, &lt;%net.menthor.metamodel.ontouml.Primitive%>.STRING);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownerStructure" eType="#//Structure"
        eOpposite="#//Structure/regions"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="groundedLiteral" eType="#//Literal"
        eOpposite="#//Literal/groundingRegion"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="composedBy" upperBound="-1"
        eType="#//Region"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="basicType" unique="false"
        eType="#//Primitive"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Domain" eSuperTypes="#//Structure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA;- structure domain&#xA;&#xA; A Domain should always be associated to an instance of measurable quality universal by a structuration relation.&#xA; A Domain must have two or more owned dimensions.&#xA; All owned dimensions must be instances of measurement dimensions (not nominal dimensions).&#xA; ========================================"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="dimensions" upperBound="-1"
        eType="#//Dimension" eOpposite="#//Dimension/ownerDomain"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Scale">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - dimension scale&#xA; ========================================"/>
    </eAnnotations>
    <eLiterals name="Interval"/>
    <eLiterals name="Rational"/>
    <eLiterals name="Ordinal"/>
    <eLiterals name="Nominal"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Dimension" eSuperTypes="#//Structure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - structure dimension&#xA;&#xA; A Dimension might be part of a Domain or connected to a Structuration.&#xA; A Dimension might define basic Regions as lower and upper bound (Constraint C19 and C20)&#xA; ========================================"/>
    </eAnnotations>
    <eOperations name="isNominal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.Scale%> _scale = this.getScale();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_scale, null));&#xA;if (!_notEquals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Scale%> _scale_1 = this.getScale();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_scale_1, &lt;%net.menthor.metamodel.ontouml.Scale%>.NOMINAL);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isInterval" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.Scale%> _scale = this.getScale();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_scale, null));&#xA;if (!_notEquals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Scale%> _scale_1 = this.getScale();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_scale_1, &lt;%net.menthor.metamodel.ontouml.Scale%>.INTERVAL);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isOrdinal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.Scale%> _scale = this.getScale();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_scale, null));&#xA;if (!_notEquals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Scale%> _scale_1 = this.getScale();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_scale_1, &lt;%net.menthor.metamodel.ontouml.Scale%>.ORDINAL);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isRational" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.Scale%> _scale = this.getScale();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_scale, null));&#xA;if (!_notEquals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Scale%> _scale_1 = this.getScale();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_scale_1, &lt;%net.menthor.metamodel.ontouml.Scale%>.RATIONAL);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isString" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.Primitive%> _measure = this.getMeasure();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_measure, null));&#xA;if (!_notEquals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Primitive%> _measure_1 = this.getMeasure();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_measure_1, &lt;%net.menthor.metamodel.ontouml.Primitive%>.STRING);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isInteger" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.Primitive%> _measure = this.getMeasure();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_measure, null));&#xA;if (!_notEquals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Primitive%> _measure_1 = this.getMeasure();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_measure_1, &lt;%net.menthor.metamodel.ontouml.Primitive%>.INTEGER);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isDecimal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.Primitive%> _measure = this.getMeasure();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_measure, null));&#xA;if (!_notEquals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Primitive%> _measure_1 = this.getMeasure();&#xA;&#x9;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_measure_1, &lt;%net.menthor.metamodel.ontouml.Primitive%>.DECIMAL);&#xA;&#x9;_and = _equals;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isNominalString" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isNominal = this.isNominal();&#xA;if (!_isNominal)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isString = this.isString();&#xA;&#x9;_and = _isString;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isIntervalInteger" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isInterval = this.isInterval();&#xA;if (!_isInterval)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isInteger = this.isInteger();&#xA;&#x9;_and = _isInteger;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isIntervalDecimal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isInterval = this.isInterval();&#xA;if (!_isInterval)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isDecimal = this.isDecimal();&#xA;&#x9;_and = _isDecimal;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isOrdinalInteger" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isOrdinal = this.isOrdinal();&#xA;if (!_isOrdinal)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isInteger = this.isInteger();&#xA;&#x9;_and = _isInteger;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isOrdinalDecimal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isOrdinal = this.isOrdinal();&#xA;if (!_isOrdinal)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isDecimal = this.isDecimal();&#xA;&#x9;_and = _isDecimal;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isRationalInteger" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isRational = this.isRational();&#xA;if (!_isRational)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isInteger = this.isInteger();&#xA;&#x9;_and = _isInteger;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isRationalDecimal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _isRational = this.isRational();&#xA;if (!_isRational)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isDecimal = this.isDecimal();&#xA;&#x9;_and = _isDecimal;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownerDomain" eType="#//Domain"
        eOpposite="#//Domain/dimensions"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="lowerBound" eType="#//Region"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="upperBound" eType="#//Region"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="unitOfMeasure" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="scale" unique="false" eType="#//Scale"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="measure" unique="false"
        eType="#//Primitive"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Property" abstract="true" eSuperTypes="#//NamedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - property (i.e. attributes and end points)&#xA;&#xA; A property is a named element which can be ordered, derived and have a dependency to a type (UML readOnly or frozen feature).&#xA; A property defines a lower and upper bound defining how many elements are allowable at this property.&#xA; ========================================"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOrdered" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="lowerBound" unique="false"
        lowerBound="1" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EInt"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="upperBound" unique="false"
        lowerBound="1" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EInt"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDependency" unique="false"
        eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EndPoint" eSuperTypes="#//Property">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - end-point&#xA;&#xA; An end-point is a property that has relationship owner and a end classifier (class or relationship, because of derivation relationships).&#xA; An end-point may also have subsets or redefines a set of other end-points, and also be subsetted and redefined by others.&#xA; ========================================"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owner" lowerBound="1" eType="#//Relationship"
        eOpposite="#//Relationship/endPoints"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="endType" lowerBound="1"
        eType="#//Classifier"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subsets" ordered="false"
        upperBound="-1" eType="#//EndPoint" eOpposite="#//EndPoint/isSubsettedBy"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="redefines" ordered="false"
        upperBound="-1" eType="#//EndPoint" eOpposite="#//EndPoint/isRedefinedBy"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="isSubsettedBy" ordered="false"
        upperBound="-1" eType="#//EndPoint" eOpposite="#//EndPoint/subsets"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="isRedefinedBy" ordered="false"
        upperBound="-1" eType="#//EndPoint" eOpposite="#//EndPoint/redefines"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Relation">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - relationship stereotypes&#xA;&#xA; UFO's universals are defined here as simple enumerations instead of a hierarchy of types.&#xA; Applications need to allow us change a relationship type (e.g. let's say, a mediation into a characterization)&#xA; We should not need to delete the relationship, create a new one, and then change all former references in the model&#xA; that previously pointed to that relationship, to point to the new element created.&#xA; ========================================"/>
    </eAnnotations>
    <eLiterals name="ComponentOf"/>
    <eLiterals name="MemberOf"/>
    <eLiterals name="SubCollectionOf"/>
    <eLiterals name="SubQuantityOf"/>
    <eLiterals name="Constitution"/>
    <eLiterals name="Characterization"/>
    <eLiterals name="Mediation"/>
    <eLiterals name="Material"/>
    <eLiterals name="Formal"/>
    <eLiterals name="Structuration"/>
    <eLiterals name="Derivation"/>
    <eLiterals name="Participation"/>
    <eLiterals name="SubEventOf"/>
    <eLiterals name="Causation"/>
    <eLiterals name="Temporal"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Temporal">
    <eLiterals name="Starts"/>
    <eLiterals name="Precedes"/>
    <eLiterals name="Equals"/>
    <eLiterals name="Meets"/>
    <eLiterals name="Finishes"/>
    <eLiterals name="Overlaps"/>
    <eLiterals name="During"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Relationship" eSuperTypes="#//NamedElement #//Classifier">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="* =========================================&#xA; - relationship&#xA;&#xA; A relationship is a classifier (not named) which may have a stereotype.&#xA; In the case where the stereotype is temporal (allen's relation), the relationship must define a temporal type (constraint C12).&#xA; A relationship has also a set of end-points.&#xA; A relationship can be derived from a truth maker only iff it is a material relationship (constraint C13).&#xA;&#xA; A derivation relationship:&#xA; (i) must be binary (Constraint 14)&#xA; (ii) must have as its source a material relationship (Constraint 15)&#xA; (iii) must have as its target a truth maker class e.g. a relator (Constraint 16)&#xA;&#xA; ========================================"/>
    </eAnnotations>
    <eOperations name="isComponentOf" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Relation%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Relation%>.COMPONENT_OF);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMemberOf" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Relation%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Relation%>.MEMBER_OF);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isSubCollectionOf" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Relation%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Relation%>.SUB_COLLECTION_OF);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isSubQuantityOf" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Relation%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Relation%>.SUB_QUANTITY_OF);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isConstitution" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Relation%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Relation%>.CONSTITUTION);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isCharacterization" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Relation%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Relation%>.CHARACTERIZATION);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMediation" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Relation%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Relation%>.MEDIATION);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMaterial" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Relation%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Relation%>.MATERIAL);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isFormal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Relation%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Relation%>.FORMAL);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isStructuration" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Relation%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Relation%>.STRUCTURATION);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isParticipation" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Relation%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Relation%>.PARTICIPATION);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isSubEventOf" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Relation%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Relation%>.SUB_EVENT_OF);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isCausation" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Relation%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Relation%>.CAUSATION);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isTemporal" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Relation%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Relation%>.TEMPORAL);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isDerivation" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Relation%> _stereotype = this.getStereotype();&#xA;return &lt;%com.google.common.base.Objects%>.equal(_stereotype, &lt;%net.menthor.metamodel.ontouml.Relation%>.DERIVATION);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isStarts" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.Temporal%> _allenRelation = this.getAllenRelation();&#xA;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_allenRelation, &lt;%net.menthor.metamodel.ontouml.Temporal%>.STARTS);&#xA;if (!_equals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isTemporal = this.isTemporal();&#xA;&#x9;_and = _isTemporal;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isPrecedes" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.Temporal%> _allenRelation = this.getAllenRelation();&#xA;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_allenRelation, &lt;%net.menthor.metamodel.ontouml.Temporal%>.PRECEDES);&#xA;if (!_equals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isTemporal = this.isTemporal();&#xA;&#x9;_and = _isTemporal;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isEquals" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.Temporal%> _allenRelation = this.getAllenRelation();&#xA;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_allenRelation, &lt;%net.menthor.metamodel.ontouml.Temporal%>.EQUALS);&#xA;if (!_equals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isTemporal = this.isTemporal();&#xA;&#x9;_and = _isTemporal;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMeets" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.Temporal%> _allenRelation = this.getAllenRelation();&#xA;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_allenRelation, &lt;%net.menthor.metamodel.ontouml.Temporal%>.MEETS);&#xA;if (!_equals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isTemporal = this.isTemporal();&#xA;&#x9;_and = _isTemporal;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isFinishes" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.Temporal%> _allenRelation = this.getAllenRelation();&#xA;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_allenRelation, &lt;%net.menthor.metamodel.ontouml.Temporal%>.FINISHES);&#xA;if (!_equals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isTemporal = this.isTemporal();&#xA;&#x9;_and = _isTemporal;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isOverlaps" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.Temporal%> _allenRelation = this.getAllenRelation();&#xA;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_allenRelation, &lt;%net.menthor.metamodel.ontouml.Temporal%>.OVERLAPS);&#xA;if (!_equals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isTemporal = this.isTemporal();&#xA;&#x9;_and = _isTemporal;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isDuring" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.Temporal%> _allenRelation = this.getAllenRelation();&#xA;boolean _equals = &lt;%com.google.common.base.Objects%>.equal(_allenRelation, &lt;%net.menthor.metamodel.ontouml.Temporal%>.DURING);&#xA;if (!_equals)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isTemporal = this.isTemporal();&#xA;&#x9;_and = _isTemporal;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isMeronymic" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _or = false;&#xA;boolean _or_1 = false;&#xA;boolean _or_2 = false;&#xA;boolean _isComponentOf = this.isComponentOf();&#xA;if (_isComponentOf)&#xA;{&#xA;&#x9;_or_2 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMemberOf = this.isMemberOf();&#xA;&#x9;_or_2 = _isMemberOf;&#xA;}&#xA;if (_or_2)&#xA;{&#xA;&#x9;_or_1 = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubQuantityOf = this.isSubQuantityOf();&#xA;&#x9;_or_1 = _isSubQuantityOf;&#xA;}&#xA;if (_or_1)&#xA;{&#xA;&#x9;_or = true;&#xA;} else&#xA;{&#xA;&#x9;boolean _isSubCollectionOf = this.isSubCollectionOf();&#xA;&#x9;_or = _isSubCollectionOf;&#xA;}&#xA;return _or;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isBinary" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>> _endPoints = this.getEndPoints();&#xA;int _size = _endPoints.size();&#xA;return (_size == 2);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isTernary" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>> _endPoints = this.getEndPoints();&#xA;int _size = _endPoints.size();&#xA;return (_size == 3);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="sourceEnd" unique="false" eType="#//EndPoint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the source (first) end-point of this relationship"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>> _endPoints = this.getEndPoints();&#xA;int _size = _endPoints.size();&#xA;boolean _greaterThan = (_size > 0);&#xA;if (_greaterThan)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>> _endPoints_1 = this.getEndPoints();&#xA;&#x9;return _endPoints_1.get(0);&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="targetEnd" unique="false" eType="#//EndPoint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the target (second) end-point of this relationship"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>> _endPoints = this.getEndPoints();&#xA;int _size = _endPoints.size();&#xA;boolean _greaterThan = (_size > 1);&#xA;if (_greaterThan)&#xA;{&#xA;&#x9;&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>> _endPoints_1 = this.getEndPoints();&#xA;&#x9;return _endPoints_1.get(1);&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="source" unique="false" eType="#//Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the source (first) end-type of this relationship"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.EndPoint%> _sourceEnd = this.sourceEnd();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_sourceEnd, null));&#xA;if (_notEquals)&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.EndPoint%> _sourceEnd_1 = this.sourceEnd();&#xA;&#x9;return _sourceEnd_1.getEndType();&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="target" unique="false" eType="#//Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the target (second) end-type of this relationship"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.EndPoint%> _targetEnd = this.targetEnd();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_targetEnd, null));&#xA;if (_notEquals)&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.EndPoint%> _targetEnd_1 = this.targetEnd();&#xA;&#x9;return _targetEnd_1.getEndType();&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="sourceClass" unique="false" eType="#//Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the source (first) end-class of this relationship"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Classifier%> _source = this.source();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_source, null));&#xA;if (_notEquals)&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Classifier%> _source_1 = this.source();&#xA;&#x9;return ((&lt;%net.menthor.metamodel.ontouml.Class%>) _source_1);&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="targetClass" unique="false" eType="#//Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the target (second) end-class of this relationship"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Classifier%> _target = this.target();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_target, null));&#xA;if (_notEquals)&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Classifier%> _target_1 = this.target();&#xA;&#x9;return ((&lt;%net.menthor.metamodel.ontouml.Class%>) _target_1);&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="sourceRelationship" unique="false" eType="#//Relationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the source (first) end-relationship of this relationship"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Classifier%> _source = this.source();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_source, null));&#xA;if (_notEquals)&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Classifier%> _source_1 = this.source();&#xA;&#x9;return ((&lt;%net.menthor.metamodel.ontouml.Relationship%>) _source_1);&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="targetRelationship" unique="false" eType="#//Relationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Returns the target (second) end-relationship of this relationship"/>
        <details key="body" value="&lt;%net.menthor.metamodel.ontouml.Classifier%> _target = this.target();&#xA;boolean _notEquals = (!&lt;%com.google.common.base.Objects%>.equal(_target, null));&#xA;if (_notEquals)&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Classifier%> _target_1 = this.target();&#xA;&#x9;return ((&lt;%net.menthor.metamodel.ontouml.Relationship%>) _target_1);&#xA;}&#xA;return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isDerived" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Checks if this relationship is derived i.e. checking if there is at least one end-point which is derived"/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>> _endPoints = this.getEndPoints();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.EndPoint%> ep : _endPoints)&#xA;{&#xA;&#x9;boolean _isIsDerived = ep.isIsDerived();&#xA;&#x9;if (_isIsDerived)&#xA;&#x9;{&#xA;&#x9;&#x9;return true;&#xA;&#x9;}&#xA;}&#xA;return false;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isEnd" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="* Checks if there is at least one end-point in this relationship of classifier c."/>
        <details key="body" value="&lt;%org.eclipse.emf.common.util.EList%>&lt;&lt;%net.menthor.metamodel.ontouml.EndPoint%>> _endPoints = this.getEndPoints();&#xA;for (final &lt;%net.menthor.metamodel.ontouml.EndPoint%> ep : _endPoints)&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Classifier%> _endType = ep.getEndType();&#xA;&#x9;boolean _equals = _endType.equals(c);&#xA;&#x9;if (_equals)&#xA;&#x9;{&#xA;&#x9;&#x9;return true;&#xA;&#x9;}&#xA;}&#xA;return false;"/>
      </eAnnotations>
      <eParameters name="c" unique="false" eType="#//Classifier"/>
    </eOperations>
    <eOperations name="isPartEssential" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _and_1 = false;&#xA;&lt;%net.menthor.metamodel.ontouml.EndPoint%> _targetEnd = this.targetEnd();&#xA;boolean _isIsDependency = _targetEnd.isIsDependency();&#xA;if (!_isIsDependency)&#xA;{&#xA;&#x9;_and_1 = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Class%> _sourceClass = this.sourceClass();&#xA;&#x9;boolean _isRigid = _sourceClass.isRigid();&#xA;&#x9;_and_1 = _isRigid;&#xA;}&#xA;if (!_and_1)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMeronymic = this.isMeronymic();&#xA;&#x9;_and = _isMeronymic;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isPartInseparable" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _and_1 = false;&#xA;&lt;%net.menthor.metamodel.ontouml.EndPoint%> _sourceEnd = this.sourceEnd();&#xA;boolean _isIsDependency = _sourceEnd.isIsDependency();&#xA;if (!_isIsDependency)&#xA;{&#xA;&#x9;_and_1 = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Class%> _targetClass = this.targetClass();&#xA;&#x9;boolean _isRigid = _targetClass.isRigid();&#xA;&#x9;_and_1 = _isRigid;&#xA;}&#xA;if (!_and_1)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMeronymic = this.isMeronymic();&#xA;&#x9;_and = _isMeronymic;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isPartImmutable" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _and_1 = false;&#xA;&lt;%net.menthor.metamodel.ontouml.EndPoint%> _sourceEnd = this.sourceEnd();&#xA;boolean _isIsDependency = _sourceEnd.isIsDependency();&#xA;if (!_isIsDependency)&#xA;{&#xA;&#x9;_and_1 = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Class%> _targetClass = this.targetClass();&#xA;&#x9;boolean _isAntiRigid = _targetClass.isAntiRigid();&#xA;&#x9;_and_1 = _isAntiRigid;&#xA;}&#xA;if (!_and_1)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMeronymic = this.isMeronymic();&#xA;&#x9;_and = _isMeronymic;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isWholeImmutable" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;boolean _and_1 = false;&#xA;&lt;%net.menthor.metamodel.ontouml.EndPoint%> _targetEnd = this.targetEnd();&#xA;boolean _isIsDependency = _targetEnd.isIsDependency();&#xA;if (!_isIsDependency)&#xA;{&#xA;&#x9;_and_1 = false;&#xA;} else&#xA;{&#xA;&#x9;&lt;%net.menthor.metamodel.ontouml.Class%> _sourceClass = this.sourceClass();&#xA;&#x9;boolean _isAntiRigid = _sourceClass.isAntiRigid();&#xA;&#x9;_and_1 = _isAntiRigid;&#xA;}&#xA;if (!_and_1)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMeronymic = this.isMeronymic();&#xA;&#x9;_and = _isMeronymic;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isPartMandatory" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.EndPoint%> _targetEnd = this.targetEnd();&#xA;int _lowerBound = _targetEnd.getLowerBound();&#xA;boolean _greaterEqualsThan = (_lowerBound >= 1);&#xA;if (!_greaterEqualsThan)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMeronymic = this.isMeronymic();&#xA;&#x9;_and = _isMeronymic;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isWholeMandatory" unique="false" eType="ecore:EDataType ../../org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="boolean _and = false;&#xA;&lt;%net.menthor.metamodel.ontouml.EndPoint%> _sourceEnd = this.sourceEnd();&#xA;int _lowerBound = _sourceEnd.getLowerBound();&#xA;boolean _greaterEqualsThan = (_lowerBound >= 1);&#xA;if (!_greaterEqualsThan)&#xA;{&#xA;&#x9;_and = false;&#xA;} else&#xA;{&#xA;&#x9;boolean _isMeronymic = this.isMeronymic();&#xA;&#x9;_and = _isMeronymic;&#xA;}&#xA;return _and;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isShareable" unique="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="material" unique="false" eType="#//Relationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return null;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="relator" unique="false" eType="#//Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return null;"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="stereotype" unique="false"
        eType="#//Relation">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value=" JP: I assume there is no reason to distinguish ordered and non-ordered, as all should be non-ordered."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="allenRelation" unique="false"
        eType="#//Temporal"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="endPoints" upperBound="-1"
        eType="#//EndPoint" containment="true" resolveProxies="false" eOpposite="#//EndPoint/owner"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="derivedFromTruthMaker"
        eType="#//Class" eOpposite="#//Class/istruthMakerOf"/>
  </eClassifiers>
</ecore:EPackage>
